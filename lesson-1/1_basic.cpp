#include <bits/stdc++.h>
using namespace std;

int main() {
	// Создали целочисленную переменную
	int x;
	// Создали и записали в нее 0
	// Рекоммендуется всегда инициализировать переменные 
	// чтобы избегать трудноуловимых ошибок
	int y = 0;
	// Логическая переменная (true/false)
	bool b = true;
	// Дробная переменная
	double d = 0.2;
	// Переменная типа символ
	char c = 'a';

	// Считывание переменной
	cin >> x;
	// Вывод переменной или значения выражения
	cout << x << " " << y << " " << x + y << endl;

	// АРИФМЕТИКА
	x + y; // Сложение
	x - y; // Вычитание
	x * y; // Умножение
	x / y; // ЦЕЛОЧИСЛЕННОЕ деление
	x % y; // Остаток по модулю

	x += y; // Увеличить x на y
	// Эквивалентно x = x + y
	// Подобные штуки есть для всех арифметических операций

	++x; // Эквивалентно x += 1
	--x; // Эквивалентно x -= 1

	// Операции с логич. переменными
	bool a;
	a && b; // и
	a || b; // или
	!a; // не

	// Сравнения
	x == y; // равно
	x != y; // не равно
	x < y; // меньше
	x > y; // больше
	x <= y; // меньше или равно
	x >= y; // больше или равно

	// Условия
	if (x > y) {
		cout << 1;
	}
	else if (x < 2*y) {
		cout << 2;
	}
	else {
		cout << 3;
	}

	// Циклы с предусловием
	while (x < y) {
		++x;
	}

	// Циклы с постусловием
	do {
		--x;
	}
	while (x > 0);

	// Циклы for
	// 	 (1)        (2)     (3)
	for (int i = 0; i < 10; ++i) {
		x += i;
	}
	// (1) - выполняется перед первой итерацией
	// (2) условие продолжения
	// (3) выполняется после каждой итерации

	// (Почти) эквивалентен такому циклу while
	int i = 0;
	while (i < 10) {
		x += i;
		++i;
	}

	// break и continue аналогичны питону
	while (true) {
		break;
		continue;
	}
}