#include <bits/stdc++.h>
using namespace std;

int main() {
	// Сет - аналог сета из питона
	// нужно указывать тип данных, который хранится в сете
	set<int> s;

	// Добавление в сет элемента
	s.insert(3);

	// Удаляет элемент из сета
	// Возвращает 1, если такой элемент был в сете, и 0 иначе
	s.erase(3);

	// Текущий размер сета
	s.size();

	// Возвращает 1, если в сете есть такой элемент,
	// и 0 иначе
	s.count(4);

	// Цикл, проходящийся по всем элементам сета в порядке возрастания
	for (auto it = s.begin(); it != s.end(); ++it) {
		// *it - элемент сета на текущей итерации
		cout << *it << endl;
	}


	// map - аналог dict из питона
	// нужно указвать два параметра - ключ и значение
	map<string, int> m;

	// Создать либо изменть значение по ключу
	m["hello"] = 1;
	m["world"] = 2;

	// Посмотреть значение по ключу
	// Выдает ошибку если его нет
	int x = m["hello"];

	// Узнать, есть ли значение по данному ключу
	m.count("hello");


	// deque - почти как массив (vector), 
	// но с дополнительным функционалом
	deque<int> a(5, 1);

	// push_front - добавляет элемент в начало массива
	a.push_front(4);

	// pop_front - удаляет элемент из конца массива
	a.pop_front();
}